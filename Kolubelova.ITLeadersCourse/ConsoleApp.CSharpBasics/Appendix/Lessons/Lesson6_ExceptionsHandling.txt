namespace ConsoleApp.CSharpBasics
{
    using static ConsoleApp.CSharpBasics.IO.Output;
    using System;

    class Program
    {
        static void Main(string[] args)
        {
            int x = 4;
            int y = 0;

            int z/* = x / y*/;

            //try
            //{
            //    z = x / y;
            //}
            //catch
            //{
            //    Out.WriteLine("Exception. Operation of devision by zero is forbidden!");
            //}
            //finally
            //{
            //    Out.WriteLine("Program was finished successfully!");
            //}

            //try
            //{
            //    z = x / y;
            //}
            //catch (DivideByZeroException)
            //{
            //    Out.WriteLine("Exception. Operation of devision by zero is forbidden!");
            //}
            //finally
            //{
            //    Out.WriteLine("Program was finished successfully!");
            //}

            //try
            //{
            //    z = x / y;
            //}
            //catch (ApplicationException ex)
            //{
            //    Out.WriteLine($"Exception: {ex.Message} {Environment.NewLine} {ex.StackTrace}");
            //}
            //finally
            //{
            //    Out.WriteLine("Program was finished successfully!");
            //}

            var intArray = new int[] { 1, 3, 4 };

            //for (int i = 0; i < intArray.Length; i++)
            //{
            //    var result = intArray[i] / (intArray.Length - i - 1);
            //    Out.WriteLine($"Result: {result}");
            //}

            try
            {
                for (int i = 0; i < intArray.Length;)
                {
                    var result = intArray[++i] / (intArray.Length - i);
                    Out.WriteLine($"Result: {result}");
                }
            }
            catch (DivideByZeroException ex)
            {
                Out.WriteLine($"Exception: {ex.Message} {Environment.NewLine} {ex.StackTrace}");
            }
            catch(IndexOutOfRangeException ex)
            {
                Out.WriteLine($"Exception: {ex.Message} {Environment.NewLine} {ex.StackTrace}");
            }
            catch(Exception ex)
            {
                Console.WriteLine($"Exception: {ex.Message} {Environment.NewLine} {ex.StackTrace}");
            }
            finally
            {
                Out.WriteLine($"Unpredicatable exception.");
            }
        }
    }
}