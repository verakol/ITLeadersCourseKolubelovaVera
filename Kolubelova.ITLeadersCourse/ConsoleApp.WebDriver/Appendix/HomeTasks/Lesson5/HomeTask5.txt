1. On the ModalsPage declare all neccessary locators for actions with Promt Window
2. Implement all neccessary methods for actions with Promt Window
3. Click Submit Email button
4. Enter email in Promt modal (tip: email input method should be implemented in AlertHelper class
   and wraped in overloaded method AcceptAlert(string inupt) in ModalsPage class)
5. Accept the Promt
6. Get promted message and compare it with expected one
7. Write result to console
8. Repeat step 3, 4
9. Dismiss Promt modal
10. Repeat step 6, 7
11. Repeat step 3, 4
12. Input empty string
13. Repeat step 6, 7

Link to Lesson 5 video: https://drive.google.com/file/d/1-Nge2ZKYYduT1JBa5On464duT4SbKts2/view?usp=sharing

-------------------ANSWER
namespace ConsoleApp.WebDriver
{
    using ConsoleApp.WebDriver.Pages.Lesson5Modals;
    using System;
    using static ConsoleApp.CSharpBasics.IO.Output;

    class Program : BaseTest
    {
        public readonly static string url = AppDomain.CurrentDomain.BaseDirectory
            + @"\Appendix\Lessons\Lesson5_Modals\modals.html";

        static void Main(string[] args)
        {

            try
            {
                ModalsPage modalsPage = NavigateTo<ModalsPage>(url);

                var expectedEmail = "john@gmail.com";

                modalsPage.ClickSubmitEmailButton();

                modalsPage.InputEmailAndAcceptAlert(expectedEmail); // 3, 4. Enter email in Promt modal and accept the Promt

                var actualEmail = modalsPage.GetEmailSubmittedMessage().Split(":")[1].TrimStart(); // 6. Get promted message

                AssertCorrectData(expectedEmail, actualEmail); // 7. compare promted message with expected one


                modalsPage.ClickSubmitEmailButton();

                modalsPage.InputEmailAndDismissAlert(expectedEmail); // step 8, 9. Dismiss Promt modal

                var expectedDismissMes = "Email submission canceled!";

                var actualDismissMes = modalsPage.GetEmailSubmittedMessage(); // 10. Get promted dismissed message

                AssertCorrectData(expectedDismissMes, actualDismissMes); // 10. compare promted dismissed message with expected one



                var emptyString = string.Empty;

                modalsPage.ClickSubmitEmailButton();

                modalsPage.InputEmailAndAcceptAlert(emptyString); // 12. Input empty string in Promt modal and accept the Promt

                var expectedEmptyStringMes = "Please, input your email!";

                var actualEmptyStringMes = modalsPage.GetEmailSubmittedMessage(); // 13. Get emty string message

                AssertCorrectData(expectedEmptyStringMes, actualEmptyStringMes); // 10. compare emty string message with expected one

            }
            catch (Exception)
            {
            }
            finally
            {
                DisposeTest();
            }
        }

        private static void AssertCorrectData(string expectedString, string actualString)
        {
            if (expectedString != actualString)
            {
                throw new Exception($"Actual data {actualString} is not equal to expected one {expectedString}");
            }

            else
            {
                Out.WriteLine($"Data is correct. Expected data: {expectedString}; Actual data: {actualString}");
            }
        }
    }
}
